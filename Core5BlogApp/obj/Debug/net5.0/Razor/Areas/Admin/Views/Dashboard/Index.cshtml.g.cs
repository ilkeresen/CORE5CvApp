#pragma checksum "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1823250bf3b037538a0806b1c5d50ae4534aefeb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Dashboard_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Dashboard/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1823250bf3b037538a0806b1c5d50ae4534aefeb", @"/Areas/Admin/Views/Dashboard/Index.cshtml")]
    public class Areas_Admin_Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <!-- DashboardStatics row -->\r\n        ");
#nullable restore
#line 10 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
   Write(await Component.InvokeAsync("DashboardStatistics"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        <!-- /.DashboardStatics row -->\r\n        <!-- DashboardProjectTable row -->\r\n        ");
#nullable restore
#line 13 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
   Write(await Component.InvokeAsync("DashboardProjectTable"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        <!-- /.DashboardProjectTable row -->\r\n        <!-- DashboardRightStatics row -->\r\n        ");
#nullable restore
#line 16 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
   Write(await Component.InvokeAsync("DashboardRightStatistics"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        <!-- /.DashboardRightStatics row -->
        <div class=""row"">
            <!-- Left col -->
            <section class=""col-lg-8 connectedSortable"">

                <div class=""row"">
                    <section class=""col-lg-6 connectedSortable"">
                        <!-- DashboardUserMessageList row -->
                        ");
#nullable restore
#line 25 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
                   Write(await Component.InvokeAsync("DashboardUserMessageList"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        <!-- /.DashboardUserMessageList row -->\r\n                    </section>\r\n                    <section class=\"col-lg-6 connectedSortable\">\r\n                        <!-- DashboardLastEightUserList row -->\r\n                        ");
#nullable restore
#line 30 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
                   Write(await Component.InvokeAsync("DashboardLastEightUserList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        <!-- /.DashboardLastEightUserList row -->
                    </section>
                </div>
                <div class=""row"">
                    <section class=""col-lg-12 connectedSortable"">
                        <!-- AdminDashboardToDoList row -->
                        ");
#nullable restore
#line 37 "C:\Users\İlker ESEN\Source\Repos\Core5BlogApp\Core5BlogApp\Areas\Admin\Views\Dashboard\Index.cshtml"
                   Write(await Component.InvokeAsync("AdminDashboardToDoList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        <!-- /.AdminDashboardToDoList row -->
                    </section>
                </div>

            </section>
            <!-- /.Left col -->
            <section class=""col-lg-4 connectedSortable"">
                <!-- TAKVİM -->
                <div class=""card bg-gradient-dark"">
                    <div class=""card-header border-0"">

                        <h3 class=""card-title"">
                            <i class=""far fa-calendar-alt mr-1""></i>
                            Takvim
                            <div hidden id=""sparkline-1""></div>
                            <div hidden id=""sparkline-2""></div>
                            <div hidden id=""sparkline-3""></div>
                        </h3>
                        <!-- tools card -->
                        <div class=""card-tools"">
                            <button type=""button"" class=""btn btn-dark btn-sm"" data-card-widget=""collapse"" title=""Küçült"">
                                <i class=""f");
            WriteLiteral(@"as fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-dark btn-sm"" data-card-widget=""remove"" title=""Kapat"">
                                <i class=""fas fa-times""></i>
                            </button>
                        </div>
                        <!-- /. tools -->
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body pt-0"">
                        <!--The calendar -->
                        <div id=""calendar"" style=""width: 100%""></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.TAKVİM -->
                <!-- RESİMLER -->
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fas fa-images mr-1""></i>
                            Resimler
                        </h3>
  ");
            WriteLiteral(@"                      <div class=""card-tools"">
                            <span data-toggle=""tooltip"" title=""3 Resim"" class=""badge badge-dark"">3 Adet</span>
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"" title=""Küçült"">
                                <i class=""fas fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-tool"" data-card-widget=""remove"" title=""Kapat"">
                                <i class=""fas fa-times""></i>
                            </button>
                        </div>
                    </div><!-- /.card-header -->
                    <div class=""card-body"">
                        <div id=""carouselExampleIndicators"" class=""carousel slide"" data-ride=""carousel"">
                            <ol class=""carousel-indicators"">
                                <li data-target=""#carouselExampleIndicators"" data-slide-to=""0"" class=""active""></li>
                     ");
            WriteLiteral(@"           <li data-target=""#carouselExampleIndicators"" data-slide-to=""1""></li>
                                <li data-target=""#carouselExampleIndicators"" data-slide-to=""2""></li>
                            </ol>
                            <div class=""carousel-inner"">
                                <div class=""carousel-item active"">
                                    <img class=""d-block w-100"" src=""https://cdn.pixabay.com/photo/2020/01/22/18/23/istanbul-4785964__480.jpg"" alt=""First slide"">
                                </div>
                                <div class=""carousel-item"">
                                    <img class=""d-block w-100"" src=""https://img.freepik.com/free-vector/spot-light-background_1284-4685.jpg"" alt=""Second slide"">
                                </div>
                                <div class=""carousel-item"">
                                    <img class=""d-block w-100"" src=""https://img.freepik.com/free-vector/empty-illuminated-podium-realistic_1441-3744.jpg"" ");
            WriteLiteral(@"alt=""Third slide"">
                                </div>
                            </div>
                            <a class=""carousel-control-prev"" href=""#carouselExampleIndicators"" role=""button"" data-slide=""prev"">
                                <span class=""carousel-control-prev-icon"" aria-hidden=""true""></span>
                                <span class=""sr-only"">Previous</span>
                            </a>
                            <a class=""carousel-control-next"" href=""#carouselExampleIndicators"" role=""button"" data-slide=""next"">
                                <span class=""carousel-control-next-icon"" aria-hidden=""true""></span>
                                <span class=""sr-only"">Next</span>
                            </a>
                        </div>
                    </div>
                </div>
                <!-- /.RESİMLER -->
            </section>
            <!-- right col -->
        </div>
        <!-- /.row (main row) -->
    </div><!-- /.container-fluid -");
            WriteLiteral("->\r\n</section>\r\n<!-- /.content -->\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>

        $(function () {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
            Inputmask().mask(""UpdateDate"");
            Inputmask().mask(""Date"");
            //todo DELETE
            $(document).on(""click"", "".ToDoDelete"", function () {
                var id = $(this).attr(""data-id"");
                $(""#Id"").val(id);
            });

            $(""#ToDoDelete"").click(function () {
                var id = $(""#Id"").val();
                console.log(id);
                debugger
                $.ajax({
                    type: ""POST"",
                    url: ""/Admin/ToDo/ToDoDelete/"",
                    data: { ""id"": id },
                    dataType: ""json"",
                    success: function () {
                        $('#todo-delete').modal('hide')
                        toastr.success('Silme İşlemi Ba");
                WriteLiteral(@"şarılı.')
                        setInterval(function () {
                            location.reload();
                        }, 1500);
                    }
                });
            });

            //todo UpdateT
            $("".ToDoUpdateT"").click(function () {
                var id = $(this).attr(""id"");
                $.ajax({
                    type: ""POST"",
                    url: ""/Admin/ToDo/ToDoUpdateT/"",
                    data: { ""id"": id },
                    dataType: ""json"",
                    success: function () {
                        toastr.success('Güncelleme İşlemi Başarılı.')
                        setInterval(function () {
                            location.reload();
                        }, 1000);
                    }
                });
            });

            //todo UpdateF
            $("".ToDoUpdateF"").click(function () {
                var id = $(this).attr(""id"");
                $.ajax({
                    type: ""POST"",");
                WriteLiteral(@"
                    url: ""/Admin/ToDo/ToDoUpdateF/"",
                    data: { ""id"": id },
                    dataType: ""json"",
                    success: function () {
                        toastr.success('Güncelleme İşlemi Başarılı.')
                        setInterval(function () {
                            location.reload();
                        }, 1000);
                    }
                });
            });

            //todo ADD
            $(""#ToDoAdd"").click(function () {
                $.validator.setDefaults({
                    submitHandler: function () {
                        var adddata = $(""#ToDoAddForm"").serialize();
                        $.ajax({
                            type: ""POST"",
                            url: ""/Admin/ToDo/ToDoAdd/"",
                            data: adddata,
                            dataType: ""json"",
                            success: function () {
                                $('#todo-add').modal('hide')
  ");
                WriteLiteral(@"                              toastr.success('Ekleme İşlemi Başarılı.')
                                setInterval(function () {
                                    location.reload();
                                }, 1500);
                            }
                        });
                    }
                });
                $('#ToDoAddForm').validate({
                    rules: {
                        Date: {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                        TodoContent: {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                    },
                    messages: {
                        Date: {
            ");
                WriteLiteral(@"                required: ""Lütfen boş bırakmayınız.""
                        },
                        TodoContent: {
                            required: ""Lütfen boş bırakmayınız.""
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            });

            //todo DETAİL
            $(document).on(""click"", "".ToDoDetail"", function () {
                var id = $(this).attr(""data-id"");
          ");
                WriteLiteral(@"      $.ajax({
                    type: ""POST"",
                    url: ""/Admin/ToDo/ToDoGetItem/"" + id,
                    dataType: ""json"",
                    success: function (toDo) {
                        var obj = jQuery.parseJSON(toDo);
                        console.log(obj);
                        var date = new Date(obj.Date);
                        var dateN = date.getDate() + ""."" + (date.getMonth() + 1) + ""."" + date.getFullYear()
                        $(""#DetailMail"").empty();
                        $(""#DetailContent"").empty();
                        $(""#DetailDate"").empty();
                        $(""#DetailMail"").append(obj.Mail);
                        $(""#DetailContent"").append(obj.TodoContent);
                        $(""#DetailDate"").append(dateN);
                    }
                });
            });

            //todo UPDATE
            $(document).on(""click"", "".ToDoUpdate"", function () {
                var id = $(this).attr(""data-id"");
          ");
                WriteLiteral(@"      $.ajax({
                    type: ""POST"",
                    url: ""/Admin/ToDo/ToDoGetItem/"" + id,
                    dataType: ""json"",
                    success: function (toDo) {
                        var obj = jQuery.parseJSON(toDo);
                        var date = new Date(obj.Date);
                        var dateN = date.getDate() + ""."" + (date.getMonth() + 1) + ""."" + date.getFullYear()
                        $(""#UpdateId"").val(obj.Id);
                        $(""#UpdateDate"").val(dateN);
                        $(""#UpdateTodoContent"").val(obj.TodoContent);
                    }
                });
            });
            $(""#ToDoUpdate"").click(function () {
                $.validator.setDefaults({
                    submitHandler: function () {
                        var updatedata = $(""#ToDoUpdateForm"").serialize();
                        $.ajax({
                            type: ""POST"",
                            url: ""/Admin/ToDo/ToDoUpdate/"",
       ");
                WriteLiteral(@"                     data: updatedata,
                            dataType: ""json"",
                            success: function () {
                                $('#todo-update').modal('hide')
                                toastr.success('Güncelleme İşlemi Başarılı.')
                                setInterval(function () {
                                    location.reload();
                                }, 1500);
                            }
                        });
                    }
                });
                $('#ToDoUpdateForm').validate({
                    rules: {
                        Date: {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                        TodoContent: {
                            required: true,
                            normalizer: function (value) {
   ");
                WriteLiteral(@"                             return $.trim(value);
                            }
                        },
                    },
                    messages: {
                        Date: {
                            required: ""Lütfen boş bırakmayınız.""
                        },
                        TodoContent: {
                            required: ""Lütfen boş bırakmayınız.""
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
    ");
                WriteLiteral("                }\r\n                });\r\n            });\r\n\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
