@using EntityLayer.Concrete
@model List<Skill>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Yetenek Listesi Tablosu</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Küçült">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-card-widget="remove" data-toggle="tooltip" title="Kapat">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            <table id="dttable" class="table table-striped projects">
                <thead>
                    <tr>
                        <th>
                            #
                        </th>
                        <th>
                            Yetenek Başlık
                        </th>
                        <th>
                            Yetenek Oran
                        </th>
                        <th class="text-center">
                            Yetenek Durum
                        </th>
                        <th class="text-right">
                            Yetenek İşlemleri
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{ int i = 0; }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @(++i)
                            </td>
                            <td>
                                @item.SkillName
                            </td>
                            <td class="project_progress">
                                <div class="progress progress-sm">
                                    @{ int ConvertInt = int.Parse(item.SkillValue); }

                                    @switch (ConvertInt)
                                    {
                                        case > 85:
                                            <div class="progress-bar bg-green" role="progressbar" aria-volumenow="@item.SkillValue" aria-volumemin="0" aria-volumemax="100" style="width: @item.SkillValue%">
                                            </div>
                                            break;
                                        case > 70:
                                            <div class="progress-bar bg-info" role="progressbar" aria-volumenow="@item.SkillValue" aria-volumemin="0" aria-volumemax="100" style="width: @item.SkillValue%">
                                            </div>
                                            break;
                                        case > 50:
                                            <div class="progress-bar bg-warning" role="progressbar" aria-volumenow="@item.SkillValue" aria-volumemin="0" aria-volumemax="100" style="width: @item.SkillValue%">
                                            </div>
                                            break;
                                        case > 1:
                                            <div class="progress-bar bg-danger" role="progressbar" aria-volumenow="@item.SkillValue" aria-volumemin="0" aria-volumemax="100" style="width: @item.SkillValue%">
                                            </div>
                                            break;
                                    }
                                </div>
                                <small>
                                    @item.SkillValue% Yetenek Oranı
                                </small>
                            </td>
                            <td class="project-state">
                                @switch (ConvertInt)
                                {
                                    case > 85:
                                        <span class="badge badge-success">Çok İyi</span>
                                        break;
                                    case > 70:
                                        <span class="badge badge-info">İyi</span>
                                        break;
                                    case > 50:
                                        <span class="badge badge-warning">Orta</span>
                                        break;
                                    case > 1:
                                        <span class="badge badge-danger">Kötü</span>
                                        break;
                                }
                            </td>
                            <td class="project-actions text-right">
                                <button type="button" class="btn btn-outline-info SkillUpdate" id="@item.SkillID" data-id="@item.SkillID" data-toggle="modal" data-target="#skill-update">
                                    <i class="fas fa-edit"></i>
                                    Güncelle
                                </button>
                                <button type="button" class="btn btn-outline-danger SkillDelete" id="@item.SkillID" data-id="@item.SkillID" data-toggle="modal" data-target="#skill-delete">
                                    <i class="fas fa-trash"></i>
                                    Sil
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>
                            #
                        </th>
                        <th>
                            Yetenek Başlık
                        </th>
                        <th>
                            Yetenek Oran
                        </th>
                        <th class="text-center">
                            Yetenek Durum
                        </th>
                        <th class="text-right">
                            Yetenek İşlemleri
                        </th>
                    </tr>
                </tfoot>
            </table>
            <button type="button" class="btn btn-outline-dark" data-toggle="modal" data-target="#skill-add">
                <i class="fas fa-plus"></i>
                Yeni Yetenek Ekle
            </button>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->

<!-- UPDATE MODAL -->
<div class="modal fade" id="skill-update" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info">
                <h4 class="modal-title"><i class="fas fa-edit"></i> Yetenek Güncelle</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <form role="form" id="SkillUpdateForm">
                <div class="modal-body">
                    <input type="hidden" id="UpdateSkillID" name="SkillID" />
                    <div class="form-group">
                        <label for="SkillName">Yetenek Adı</label>
                        <input class="form-control" type="text" id="UpdateSkillName" name="SkillName" />
                    </div>
                    <div class="form-group">
                        <label for="SkillValue">Yetenek Oranı (0-100)</label>
                        <input class="form-control" type="number" min="0" max="100" id="UpdateSkillValue" name="SkillValue" />
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                    <button type="submit" class="btn btn-info" id="SkillUpdate">Yetenek Güncelle</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ADD MODAL -->
<div class="modal fade" id="skill-add" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-dark">
                <h4 class="modal-title"><i class="fas fa-pen-nib"></i> Yetenek Ekle</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <form role="form" id="SkillAddForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="SkillName">Yetenek Adı</label>
                        <input class="form-control" type="text" id="SkillName" name="SkillName" />
                    </div>
                    <div class="form-group">
                        <label for="SkillValue">Yetenek Oranı (0-100)</label>
                        <input class="form-control" type="number" min="0" max="100" id="SkillValue" name="SkillValue" />
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                    <button type="submit" class="btn btn-dark" id="SkillAdd">Yetenek Ekle</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- DELETE MODAL -->
<div class="modal fade" id="skill-delete" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h4 class="modal-title"><i class="fas fa-trash"></i> Emin Misin?</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <strong>Seçtiğiniz Yetenek silinecektir.</strong>
                <input type="hidden" name="SkillID" id="SkillID" />
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                <input type="button" id="SkillDelete" class="btn btn-danger" value="Yetenek Sil" />
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>

        $(function () {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });

            //SKİLL DELETE
            $(document).on("click", ".SkillDelete", function () {
                var id = $(this).attr("data-id");
                $("#SkillID").val(id);
            });

            $("#SkillDelete").click(function () {
                var id = $("#SkillID").val();
                $.ajax({
                    type: "POST",
                    url: "/Admin/Skill/SkillDelete/",
                    data: { "id": id },
                    dataType: "json",
                    success: function () {
                        $('#skill-delete').modal('hide')
                        toastr.success('Silme İşlemi Başarılı.')
                        setInterval(function () {
                            location.reload();
                        }, 1500);
                    }
                });
            });

            //SKİLL ADD
            $("#SkillAdd").click(function () {
                $.validator.setDefaults({
                    submitHandler: function () {
                        var adddata = $("#SkillAddForm").serialize();
                        $.ajax({
                            type: "POST",
                            url: "/Admin/Skill/SkillAdd/",
                            data: adddata,
                            dataType: "json",
                            success: function () {
                                $('#skill-add').modal('hide')
                                toastr.success('Ekleme İşlemi Başarılı.')
                                setInterval(function () {
                                    location.reload();
                                }, 1500);
                            }
                        });
                    }
                });
                $('#SkillAddForm').validate({
                    rules: {
                        SkillName: {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                        SkillValue: {
                            required: true,
                            number: true,
                        },
                    },
                    messages: {
                        SkillName: {
                            required: "Lütfen boş bırakmayınız."
                        },
                        SkillValue: {
                            required: "Lütfen boş bırakmayınız.",
                            number: "Lütfen Sayı giriniz.",
                            min: "En Az 0 Yetenek Oranı Giriniz.",
                            max: "En Fazla 100 Yetenek Oranı Giriniz."
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            });

            //SKİLL UPDATE
            $(document).on("click", ".SkillUpdate", function () {
                var id = $(this).attr("data-id");
                $.ajax({
                    type: "POST",
                    url: "/Admin/Skill/SkillGetItem/" + id,
                    dataType: "json",
                    success: function (skill) {
                        var obj = jQuery.parseJSON(skill);
                        $("#UpdateSkillID").val(obj.SkillID);
                        $("#UpdateSkillName").val(obj.SkillName);
                        $("#UpdateSkillValue").val(obj.SkillValue);
                    }
                });
            });
            $("#SkillUpdate").click(function () {
                $.validator.setDefaults({
                    submitHandler: function () {
                        var updatedata = $("#SkillUpdateForm").serialize();
                        $.ajax({
                            type: "POST",
                            url: "/Admin/Skill/SkillUpdate/",
                            data: updatedata,
                            dataType: "json",
                            success: function () {
                                $('#skill-update').modal('hide')
                                toastr.success('Güncelleme İşlemi Başarılı.')
                                setInterval(function () {
                                    location.reload();
                                }, 1500);
                            }
                        });
                    }
                });
                $('#SkillUpdateForm').validate({
                    rules: {
                        SkillName: {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                        SkillValue: {
                            required: true,
                            number: true,
                        },
                    },
                    messages: {
                        SkillName: {
                            required: "Lütfen boş bırakmayınız."
                        },
                        SkillValue: {
                            required: "Lütfen boş bırakmayınız.",
                            number: "Lütfen Sayı giriniz.",
                            min: "En Az 0 Yetenek Oranı Giriniz.",
                            max: "En Fazla 100 Yetenek Oranı Giriniz."
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            });

        });
    </script>
}